name: S905D KERNEL CI
on:
  release:
    types: [published]
  push:
    branches:
      - master
    paths:
      - ".config"
      - ".github/workflows/main.yml"
      - "patch/**"
  watch:
    types: [started]
env:
  KVER: 5.15.174
  ARCH: arm64
  CROSS_COMPILE: /opt/toolchain/bin/aarch64-none-linux-gnu-
  LOCALVERSION: -aml-s905d-starx-action
jobs:
  build:
    runs-on: ubuntu-24.04
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      BUILD_DIR: ${{ github.workspace }}/build
    steps:
      - name: Set BUILD_STAGING_DIR
        run: echo "BUILD_STAGING_DIR=${{ env.BUILD_DIR }}/linux-${{ env.KVER }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Host info
        run: |
          pwd
          lscpu
          free -h
          df -h

      - name: Install requirements
        run: |
          sudo apt-get update
          sudo apt-get upgrade -y
          sudo apt-get install -y git fakeroot build-essential ncurses-dev xz-utils libssl-dev bc flex libelf-dev bison libncurses-dev autoconf dkms libudev-dev libpci-dev libiberty-dev u-boot-tools lzop

      - name: Download and uncompress kernel
        run: bash setup_new_kernel.sh $KVER $BUILD_DIR

      - name: Install cross compile toolchain
        run: bash setup_aarch64_toolchain.sh

      - name: Apply patches
        run: |
          cd $BUILD_STAGING_DIR
          cp -r "$GITHUB_WORKSPACE/patch" .
          for p in `ls patch`; do patch --ignore-whitespace -t -p1 -N < "patch/$p"; done

      - name: Build Kernel
        run: |
          cd $BUILD_STAGING_DIR
          cp "$GITHUB_WORKSPACE/.config" .config
          make -j$(nproc) oldconfig
          make -j$(nproc) bindeb-pkg

      - name: Extract files
        run: |
          cd $BUILD_STAGING_DIR
          cp arch/arm64/boot/Image $GITHUB_WORKSPACE
          cp arch/arm64/boot/dts/amlogic/*.dtb $GITHUB_WORKSPACE
          rsync -a ../*$KVER* --exclude="linux-$KVER" $GITHUB_WORKSPACE

      - uses: actions/upload-artifact@v4.4.3
        with:
          name: Kernel ${{ env.KVER }}
          include-hidden-files: true
          path: |
            install_kernel.sh
            Image
            *${{ env.KVER }}*
            .config
            *.dtb

      - name: ZIP FILES
        run: zip "$KVER.zip" install_kernel.sh Image *$KVER* .config *.dtb

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.KVER }}.zip
